// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\zeabus_hydrophone_fixed_point\ADC4_Interface.v
// Created: 2020-04-16 11:11:01
// 
// Generated by MATLAB 9.7 and HDL Coder 3.15
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: ADC4_Interface
// Source Path: zeabus_hydrophone_fixed_point/Hydrophone processing/ADC4 Interface
// Hierarchy Level: 1
// 
// -------------------------------------------------------------

`timescale 10 ns / 10 ns

module ADC4_Interface
          (clk,
           reset,
           enb_1_64_0,
           enb,
           enb_1_64_1,
           In1,
           Out1);


  input   clk;
  input   reset;
  input   enb_1_64_0;
  input   enb;
  input   enb_1_64_1;
  input   signed [17:0] In1;  // sfix18_En17
  output  signed [17:0] Out1;  // sfix18_En17


  wire signed [17:0] Median_Filter_out1;  // sfix18_En17
  wire signed [17:0] HiRes_Filter_out1;  // sfix18_En17
  reg signed [17:0] Downsample_out1;  // sfix18_En17
  reg signed [17:0] Downsample_out1_1;  // sfix18_En17


  Median_Filter u_Median_Filter (.clk(clk),
                                 .reset(reset),
                                 .enb(enb),
                                 .u(In1),  // sfix18_En17
                                 .y(Median_Filter_out1)  // sfix18_En17
                                 );

  HiRes_Filter u_HiRes_Filter (.clk(clk),
                               .reset(reset),
                               .enb(enb),
                               .u(Median_Filter_out1),  // sfix18_En17
                               .y(HiRes_Filter_out1)  // sfix18_En17
                               );

  // Downsample by 64 register (Sample offset 0)
  always @(posedge clk)
    begin : Downsample_output_process
      if (reset == 1'b1) begin
        Downsample_out1 <= 18'sb000000000000000000;
      end
      else begin
        if (enb_1_64_1) begin
          Downsample_out1 <= HiRes_Filter_out1;
        end
      end
    end



  always @(posedge clk)
    begin : PipelineRegister_process
      if (reset == 1'b1) begin
        Downsample_out1_1 <= 18'sb000000000000000000;
      end
      else begin
        if (enb_1_64_0) begin
          Downsample_out1_1 <= Downsample_out1;
        end
      end
    end



  assign Out1 = Downsample_out1_1;

endmodule  // ADC4_Interface

